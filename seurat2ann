.regularise_df <- function(df, drop_single_values = TRUE) {
  if (ncol(df) == 0) df[['name']] <- rownames(df)
  if (drop_single_values) {
    k_singular <- sapply(df, function(x) length(unique(x)) == 1)
    if (sum(k_singular) > 0)
      warning(paste('Dropping single category variables:'),
              paste(colnames(df)[k_singular], collapse=', '))
    df <- df[, !k_singular, drop=F]
    if (ncol(df) == 0) df[['name']] <- rownames(df)
  }
  return(df)
}

seurat2anndata <- function(
  obj, outFile = NULL, slot = 'counts', main_layer = 'RNA', transfer_layers = c("spliced", "unspliced", "ambiguous"), drop_single_values = TRUE
) {
  
  if (compareVersion(as.character(obj@version), '3.0.0') < 0)
    obj <- Seurat::UpdateSeuratObject(object = obj)
  
  X <- Seurat::GetAssayData(object = obj, assay = main_layer, slot = slot)
  
  obs <- .regularise_df(obj@meta.data, drop_single_values = drop_single_values)
  
  var <- .regularise_df(Seurat::GetAssay(obj, assay = main_layer)@meta.features, drop_single_values = drop_single_values)
  
  obsm <- NULL
  reductions <- names(obj@reductions)
  if (length(reductions) > 0) {
    obsm <- sapply(
      reductions,
      function(name) as.matrix(Seurat::Embeddings(obj, reduction=name)),
      simplify = FALSE
    )
    names(obsm) <- paste0('X_', tolower(names(obj@reductions)))
  }
  
  layers <- list()
  for (layer in transfer_layers) {
    mat <- Seurat::GetAssayData(object = obj, assay = layer, slot = slot)
    layers[[layer]] <- Matrix::t(mat)
  }
  
  anndata <- reticulate::import('anndata', convert = FALSE)
  
  adata <- anndata$AnnData(
    X = Matrix::t(X),
    obs = obs,
    var = var,
    obsm = obsm,
    layers = layers
  )
  
  if (!is.null(outFile))
    adata$write(outFile, compression = 'gzip')
  
  adata
}
